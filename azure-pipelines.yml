# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core
name: $(Date:yy)$(DayOfYear)$(rev:.r)
trigger:
- master

pool:
  vmImage: 'vs2017-win2016'

variables:
  buildConfiguration: 'Release'
  version: '1.0.$(Build.BuildNumber)'
#Your build pipeline references an undefined variable named ‘Parameters.DevOpsPat’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972


steps: 

- script: echo hello BuildNumber $(Build.BuildNumber) $(version)
  displayName: 'BuildNumber'

 - task: azure-cosmosdb.emulator-public-preview.run-cosmosdbemulatorcontainer.CosmosDbEmulator@2
  displayName: 'Run Azure Cosmos DB Emulator container'

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: restore
    projects: '**/*.sln'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    command: build
    projects: '**/*.sln'
    arguments: '--configuration $(buildConfiguration) /p:AssemblyVersion=$(version)'
    
- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    projects: '**/*.sln'
    arguments: '--configuration $(buildConfiguration) --logger trx --collect "Code coverage"'
     
- script: dotnet pack --configuration $(buildConfiguration) --no-build /property:Version=$(version) ./src/IdentityServer4-Extension-Grants.sln
  displayName: 'dotnet pack'
  
    

- task: PublishTestResults@2
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'


